name: Compile QuantumCloak Windows 64 Wallet

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          depends
          src/.libs
          src/.deps
          src/.objs
          .config.cache
        key: ${{ runner.os }}-build-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libtool \
          autotools-dev \
          automake \
          pkg-config \
          bsdmainutils \
          python3 \
          nsis \
          g++-mingw-w64-x86-64 \
          wine-binfmt \
          wine64 \
          qtbase5-dev \
          qttools5-dev-tools \
          qttools5-dev

    - name: Build dependencies
      run: |
        cd depends
        make -j $(nproc) HOST=x86_64-w64-mingw32

    - name: Configure wallet
      run: |
        ./autogen.sh
        CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=$PWD/depends/x86_64-w64-mingw32 --enable-reduce-exports --disable-online-rust --with-gui=qt5

    - name: Compile wallet
      run: |
        make -j $(nproc)

    - name: Find and list binaries
      run: |
        find src -type f -executable -exec ls -lah {} \;

    - name: Make binaries executable
      run: |
        chmod +x src/pivxd.exe
        chmod +x src/pivx-cli.exe
        chmod +x src/pivx-tx.exe
        chmod +x src/qt/pivx-qt.exe

    - name: Archive binaries
      run: |
        tar -czvf windows64.tar.gz src/pivxd.exe src/pivx-cli.exe src/pivx-tx.exe src/qt/pivx-qt.exe

    - name: Create GitHub release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        name: "QuantumCloak Wallet Release v${{ github.run_number }}"
        draft: false
        prerelease: true

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: windows64.tar.gz
        asset_name: windows64.tar.gz
        asset_content_type: application/gzip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: windows64.tar.gz
